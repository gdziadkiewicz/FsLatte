// FSharp module generated by the BNF converter
module FsLatte.Model.Abs

type Ident = Ident of string

and Program =
 | Program of TopDef list

and TopDef =
 | FnDef of Type * Ident * Arg list * Block

and Arg =
 | Arg of Type * Ident

and Block =
 | Block of Stmt list

and Stmt =
 | Empty
 | BStmt of Block
 | Decl of Type * Item list
 | Ass of Ident * Expr
 | Incr of Ident
 | Decr of Ident
 | Ret of Expr
 | VRet
 | Cond of Expr * Stmt
 | CondElse of Expr * Stmt * Stmt
 | While of Expr * Stmt
 | SExp of Expr

and Item =
 | NoInit of Ident
 | Init of Ident * Expr

and Type =
 | Int
 | Str
 | Bool
 | Void
 | Fun of Type * Type list

and Expr =
 | EVar of Ident
 | ELitInt of int
 | ELitTrue
 | ELitFalse
 | EApp of Ident * Expr list
 | EString of string
 | Neg of Expr
 | Not of Expr
 | EMul of Expr * MulOp * Expr
 | EAdd of Expr * AddOp * Expr
 | ERel of Expr * RelOp * Expr
 | EAnd of Expr * Expr
 | EOr of Expr * Expr

and AddOp =
 | Plus
 | Minus

and MulOp =
 | Times
 | Div
 | Mod

and RelOp =
 | LTH
 | LE
 | GTH
 | GE
 | EQU
 | NE

